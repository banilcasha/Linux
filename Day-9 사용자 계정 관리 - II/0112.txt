
# man [명령어]	: 명령어 옵션 설명 출력
# [명령어]	: 명령어 옵션 설명 출력

===========================================
<다중 명령어>
ERR(에러) CMD(정상명령어)라고 가정

1. CMD1 ; CMD2
-첫번째 명령어부터 순차적으로 실행된다
-첫번째 명령어가 실패(에러)해도 끝까지 실행된다.
ex) # ls ; date ; cal

2. CMD1 && CMD2
-첫번째 명령어가 정상출력되야 두번째 명령어를 실행한다.
-순차적으로 실행된다.
-앞에 에러가 있으면 그 이후가 출력되지 않는다
# cat defdd && ls ->cat: defdd: 그런 파일이나 디렉터리가 없습니다

CMD1 && ERR2 && CMD3 ->CMD1 까지 정상. 에러출력


3. CMD1 || CMD2
-첫번째 정상 명령어만 출력
-첫번째가 정상이면 첫번째만
-첫번째가 에러면 그다음 정상명령어 1개만 실행됨

CMD1 || CMD2 -> CMD1 만 실행
CMD1 || ERR2 || CMD3 -> CMD1 만 실행
ERR1 || CMD2  -> ERR1 발생, CMD2 실행
ERR1 || CMD2 || CMD3 -> ERR1 발생, CMD2 실행
ERR1 || ERR2 || CMD3 -> ERR1,2 발생, CMD3 실행

===========================================
<$PATH 환경변수 테스트>

1. # echo $PATH
:명령어들의 위치가 출력되는 변수
->/usr/local/sbin:/usr/local/bin:/sbin:/bin
:/usr/sbin:/usr/bin:/root/bin

2. # cd /practice
:테스트할 디렉토리로 이동

3. # cp /bin/ls ./1234
:ls를 /practice/1234 로 복사

4. # 1234 -> -bash: 1234: command not found
:정상적으로 동작하지 않음
명령어처럼 입력이되면 $PATH에서 나오는 경로에서 해당 명령어를 다 찾는데 1234라는 명령어는 없기때문에 에러발생한다.

4-1. # /practice/1234 -> 정상동작
:경로를 입력해주면 정상동작한다.


5. # PATH=$PATH:/practice
:PATH 에 $PATH의 결과값과 ":/practice"를 합한 값을 넣으려고 한다.
/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin:/root/bin:/practice 를 넣으려고!
왜?? 1234를 명령어로 인식해서 ls를 입력한 것처럼 나오게 하려고

===========================================
<Login 시 실행되는 파일의 순서>

1. /etc/profile 에서 /etc/profile.d/* 전부
2. ~/.bash_profile
3. ~/.bashrc   
(.파일명 은 숨김파일이라 ls -a 해야 볼수있는 파일이다.)
4. /etc/bashrc

<로그인되자마자 실행되는 명령어 만들기>
alias는 로그아웃하면 전부 없어지는 설정이다

1. # alias c='clear'
2. # logout
3. # c : 에러나옴
4. # vi ~/.bashrc
5. alias c='clear' 추가
6. # logout 후 재로그인하기 (Shift+Ctrl+R : 연결하기)
7. # c : clear 결과나옴

===========================================
<사용자 계정 관리>

-계정관련 파일
/etc/passwd	:사용자 기본정보(계정명, uid,gid..)
/etc/shadow	:사용자 패스워드가 암호화되어 저장된 파일
/etc/group	:그룹의 기본정보 
/etc/gshadow	:그룹의 패스워드가 암호화되어 저장된 파일
/etc/login.defs	:시스템 사용자의 전체를 제한하기위해 
		  사용하는 설정파일
/etc/default/useradd :사용자 계정 생성 시 필요한 기본정보
/etc/skel/ (디렉토리) : 사용자 계정 생성 시 홈디렉토리에
		     기본적으로 복사될 파일이 있는 디렉토리

1. /etc/passwd 내용
[사용자계정명]:[패스워드]:[UID]:[GID]:[코멘트]:[홈디렉토리]:[쉘]

[사용자계정명]: 중복되면 안된다.
[패스워드]: 'x'로 표시. 패스워드가 암호화되어있음을 나타냄
[UID]: User IDentification. 사용자 개인을 숫자로 구별하는 고유id값
           root=0,0~99번은 시스템관리계정을 위해 예약되어있고
           일반사용자는 500번 부터 시작한다.
[GID]: Group IDentification. 각 사용자 계정은 고유한 GID를 갖는다.
           root=0,그룹번호와 이름은 /etc/group에 저장된다.
           한 사용자는 여러 그룹에 속할 수 있다.
[코멘트]: 해당 계정 관련 정보를 명시하는 곳, 연락처 등
	시스템에 영향안주니까 생략가능
[홈디렉토리]: root=/root, 일반사용자는 /home 하위에 위치한다.
	      절대 경로명으로 명시해야한다.
	      로그인하면 들어가게되는 디렉토리이다.
[쉘]: 사용자가 로그인시 사용할 쉘 파일의 위치를 정의한다.
        /etc/shells 파일 내용에 명시된 쉘 경로 참고


2. /etc/shadow 내용
[사용자계정명]:[패스워드]:[암호최종변경일]:[암호최소변경일수]
:[암호최대변경일수]:[암호변경경고일수]
:[계정사용 불가날짜]:[계정만료일]

[패스워드]: 사용자의 패스워드가 암호화되어 저장됨
	   처음 2글자=어떤방식으로 암호화됐는지
		$1 : MD5
		$5 : SHA256
		$6 : SHA512


3. /etc/group
[그룹이름]:[패스워드]:[GID]:[그룹구성원]

[패스워드]: 'x'는 /etc/gshadow 파일에 암호가 저장되어있음을 의미
[그룹구성원] : 각 사용자들을 ','로 구분하여 나열한다.


4. /etc/gshadow
[그룹명]:[그룹패스워드]:[그룹관리자]:[그룹구성원]

===========================================
<사용자 계정생성 관련 명령어>

# useradd [옵션] [계정명]	: 사용자 계정 생성 명령어
[옵션]	의미
-c	코멘트 등록
-u	UID 지정
-b	default로 지정되는 홈디렉토리를 지정
-d	홈디렉토리 지정
-D	(/etc//default/useradd)의 내용을 수정하는 명령어
-e	계정만료일
-g	주 그룹지정
-G	보조 그룹지정
-s	쉘 지정
-f	패스워드 유효일자 지정
-m -k	사용자계정을 만들때 복사될 skel 디렉토리를 지정해줌

ex) 
# useradd test_user1	: test_user1 라는 계정생성
# useradd -u 600 test_user2 : UID=GID=600으로 test_user3 생성
# useradd test_user12 :사용자를 만들때 마다 skel 하위에 있는 
			모든 파일이 홈디렉토리에 복사됨
# useradd -m -k /skel_test user_test14 : /skel_test 의 하위내용을
				 user_test14의 홈디렉토리인
			/home/user_test14에 복사하도록 설정함
# useradd -D	: 계정생성관련 default값 확인가능
# useradd -D -b /skel_test :/etc//default/useradd)내용에서
			HOME=/skel_test 로 변경됨

-------------------------------------------------------------------------
# su [계정명] 	: 해당계정으로 전환하나 환경변수는 바꾸지 않음
# su - [계정명]	: 해당계정으로 전환하면서 환경변수도 함께 변경함
		  더 자주 쓰임
ex)# su - test_user1
->[test_user1@Server-A ~]$ cat /etc/passwd | tail -1
-> test_user1:x:500:500::/home/test_user1:/bin/bash
    UID : GID  = 500:500으로 생성 (계정추가될때마다 1씩증가됨)
    홈디렉토리 : /home/test_user1

-------------------------------------------------------------------------
# userdel [계정명]		:계정 삭제
# userdel -r [계정명]	: 홈디렉토리와 /var/spool/mail/ 아래 파일도 삭제
단, su로 계속 사용자 전환을 하면 쉘이 계속계속 생기게 되기때문에 계정삭제하기가 어렵다. 
한번에 다 삭제하기 위해서는 # kill -9 [프로세스 번호]

--------------------------------------------------------------------------
# usermod [계정명]	:계정 정보 수정
옵션	의미
-c	코멘트수정
-u	UID 변경
-d	홈 디렉토리 변경
-e	사용자 계정 유효기간
-f	패스워드 유효일자 변경 (암호변경은 #passwd)
-g	기본그룹변경
-G	보조그룹변경
-s	쉘 변경


ex)
# usermod -u 600 user_test16	: UID=600으로 변경
# passwd 	: 현재계정의 암호변경
# passwd [계정명]	: [계정명]의 암호를 변경

--------------------------------------------------------------------------
# su - root
# cat /etc/passwd
# su - p-user1
# cat /etc/passwd		읽기 가능
# cat /etc/shadow		비밀번호등 중요내용이 들어있는것은					root 계정외에는 읽을 수 없다
# exit			root 계정으로 돌아옴
# pwunconv		비밀번호 암호화 disable <-> # pwconv
# su - p-user1		
# cat /etc/passwd		비밀번호 위치가 'x'가 아니라 보여진다
--------------------------------------------------------------------------
# pwck		(/etc/passwd, /etc/shadow) 파일을 검사
# grpck		(/etc/group, /etc/gshadow) 파일을 검사
# vi /etc/passwd

# cat /etc/login.defs   
--------------------------------------------------------------------------
# groupadd  - 그룹추가
# groupmod - 그룹수정
# groupdel    - 그룹삭제

# groupadd WEB
# cat /etc/group | tail -1

# groupmod -g 700 WEB
# cat /etc/group | tail -1

#useradd -g WEB web_user1 = # useradd -g 700 web_user1
# cat /etc/passwd | tail -1
--------------------------------------------------------------------------
# chage    - 사용자 계정의 암호관리
옵션	의미
-l	설정 내용확인
-m	암호를 변경할 수 있는 최소기간(단위 :일)
-M	유효한 암호의 최대 일 수
-W	사용자가 암호를 바꿀때까지 경고할 일 수
-I	암호 유효기간이 완료된 후 계정이 비활성화 될 일 수
-E	사용자 계정을 사용할 수 있는 유효기간 (YYYY/MM/DD)
-d	사용자가 암호를 변경한 마지막 일자를 수정할 때 사용


# chage -l web-user1	: web-user1 의 설정내용을 확인
->마지막으로 암호를 바꾼 날	: 1월 12, 2017
    암호 만료			: 1월 22, 2017
    암호가 비활성화 기간	:안함
    계정 만료			:안함
    암호를 바꿀 수 있는 최소 날 수	: 1
    암호를 바꿔야 하는 최대 날 수	: 10
    암호 만료 예고를 하는 날 수	: 3


















































