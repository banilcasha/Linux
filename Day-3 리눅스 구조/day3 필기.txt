------------------------------------------------------------------------------------------------------
 Login
	- 사용자 계정 및 암호를 통해 사용자 인증을 거치는 과정 
	- 파일 및 디렉토리에 대해 접근권한 및 사용 권한을 얻어 시스템을 사용할 수 있게 되는 과정
	- 입력하는 패스워드는 출력되지 않는다. (GUI환경 제외)
	
	리눅스는 멀티유저 환경으로 이러한 과정이 없으면 다른 사용자가 임의적인 작업을
	할 수 있는 문제가 발생한다.
	
	(1) /etc/passwd 파일에 존재 하는 쉘 환경 환인
	(2) /etc/bashrc와 /etc/profile 파일을 읽음
	(3) 사용자 home 디렉토리에 위치한 .bashrc, .bash_profile 파일을 읽음
	  
	Logout
	- Xshell 		: Ctrl + D (연결해제)
	- Console 		: Ctrl + D 
					  #exit , #logout
	
	Console에서는 총 6개의 작업창이 제공된다.	Ctrl + Alt + F1 ~ F6				
 
-----------------------------------------------------------------------------------------------------
파일의 종류 //파일의 종류 pdf

파일(file) - 관련 있는 정보들의 집합
- 파일을 효과적으로 관리하기 위해 디렉터리를 사용
- 파일은 사용 목적에 따라 일반 파일, 디렉터리, 심볼릭 링크, 장치 파일로 구분

(1) 일반파일
(2) 디렉토리
(3) 링크파일
(4) 장치파일
------------------------------------------------------------------------------------------------------

디렉터리 계층 구조 1페이지만

- 리눅스에서는 파일을 효율적으로 관리하기 위해 디렉터리를 계층적으로 구성

최상위 디렉토리	
- '/'로 표시하며 모든 디렉토리의 상위 디렉토리

하위 디렉터리
 - (서브 디렉터리) 디렉터리 아래에 있는 디렉터리 이다. 

상위 디렉터리 
- (부모 디렉터리) : ‘..’으로 표시하며 	'/' 디렉토리를 제외한 모든 디렉터리에는 
  부모 디렉터리가 있다.

작업 디렉토리 
- (현재 디렉토리) 현재 위치한 디렉토리이며 '.' 으로 표시

홈 디렉토리 
- '~' 물결로 표시하며 각 사용자에게 할당된 디렉토리로 처음 사용자 계정을 만들때 지정

파일과 디렉토리 이름의 규칙
	- 파일과 디렉토리에는 경로명의 구분자로 사용하는 '/'을 사용 할 수 없다.
	-  '-', '_', '.'만 사용하며, 그외 공백이나 특수기호는 사용하면 안된다.
	- 대소문자를 구별하며 '.'으로 시작하면 숨김파일로 간주한다.
	

디렉토리 구조 ppt

------------------------------------------------------------------------------------------------------


------------------------------------------------------------------------------------------------------
명령어 구조ppt 1페이지
-----------------------------------------------------------------------------------------------------	
	1. 대,소문자 구분
	2. 명령어 구조
		- #CMD + [option]
		- #CMD + [argument]
		- #CMD + [option] + [argument]
		
	3. 명령어의 도움말
		- 명령어 뒤에 --help 인자를 사용하여 사용방법 및 옵션을 확인 할 수 있다.
		- #CMD -h
		- #CMD --help
		- man 패키지 설치 후 #man CMD
		
	man
	#yum -y install
	man 명령의 실행 결과

	NAME 			➡ 명령에 의한 간략한 설명
	SYNOPSIS 		➡ 명령의 사용 방법 요약
	DESCRIPTION 	➡ 명령에 대한 상세한 기술
	SEE ALSO        ➡ 명령에 대한 기타 기술
		
	기본 명령어
-----------------------------------------------------------------------------------------------------
	pwd (Print Working Directory)
	- 현재 위치한 절대경로 확인	
-----------------------------------------------------------------------------------------------------	
	clear
	- 화면지우기, 내용 삭제가 아닌 마지막 출력라인을 화면 제일 위로 올려줌
	
-----------------------------------------------------------------------------------------------------
옵션을 전부 알려드릴 수 없지만 유용한 것들만 알려준다.
자세한건 man과 help를 통해서 알아보아라
필요할때 찾아서 쓸 정도의 실력이 알면된다.	
-----------------------------------------------------------------------------------------------------	
ls	(List segment)
	- 파일 및 디렉리 목록 출력
	
	ls [option][file]
		-a 숨김파일을 포함한 경로안에 모든 내용 출력.
		-l List형태로 출력 (#ll) //잠시 뒤에 설명
		-F 파일의 형식을 알 수 있는 문자를 추가.
		-t 수정된 날짜를 기준으로 출력.
		-R 현재 위치를 기준으로 하위 디렉토리 및 파일을 출력한다.
		-h -l 과함께 사용하여 파일 크기를 사람이 보기 쉽게 출력한다.
		-S -l 과함께 파일크기를 기준으로 정렬한다.

#ls				//명령어만 사용한 경우
#ls -l			//명령어와 옵션을 용한 경우
#ls /bin		//명령어와 인자를 사용한 경우
#ls -l /bin/ 	//명령어 + 옵션 + 인자





ls -a -l -h
옵션끼리는 -을 반복하여 적지 않아도 된다. ex) ls -alh
가장큰파일 확인 ls -alhS
	
	
	
	
	
	
	
	
	
	
			/ 디렉토리
			* 실행파일
			@ 링크파일
		
리눅스는 파일에 확장자가 없어서 해당 파일이 실행파일 이나 일반파일, 
그리고 디렉토리 구분을 할 수 가 없다.
확인을 하기 위해서는 명령어를 통해 확인해야 한다.
불편을 줄이고자 alias로 color옵션이 설정되어 있다.
		
실행파일은 "*", 경로는 "/", 심블릭 링크는 "@", FIFO는 "|", 소켓은 "=", 일반적인 파일은 없다.	
	
	cd (Change Directory)
	- 디렉토리 이동
	
	cd [디렉토리명/변수]
	
	#cd /bin
	
	디렉터리 파일을 나타내는 특수문자
	
	
	
	#cd, #cd ~		: 로그인한 사용자 홈디렉토리
	#cd ~[계정명]   : 해당 계정의 홈디렉토리로 이동
	#cd - 			: 바로이전의 작업 디렉토리로 이동
	#cd ..			: 상위 디렉토리 이동
	#cd / 			: 최상위 디렉토리로 이동

	
	
	
	디렉토리 구조 ppt 2,3
	
	절대경로	: 최상위 디렉토리인 / 부터 시작하는 위치.
				: 반드시 '/'으로 시작
				: 루트 디렉토리부터 시작하여 특정 파일이나 디렉토리의 위치까지
				  이동하면서 거치는 모든 중간 디렉터리의 이름을 표시
				: 특정 위치를 가리키는 절대 경로명은 항상동일 하다.
	
	상대경로	: 현재 작업하고 있는 디렉토리에서의 상대적인 위치.
			    : '.' 현재 디렉토리 '..' 상위 디렉토리
				: '/' 이외에 문자로 시작한다.
				: 상대 경로명은 현재 디렉토리가 어디냐에 따라 달라진다.
	
	
	
	pwd - /windows/7/ultimate 일때 windows 로이동
	절대 경로  cd /windows
	상대 경로  cd ../../
	
	pwd - /linux/centos/6.8/ 일때 enterprise 까지 이동
	절대 경로 cd /windows/10/enterprise
	상대 경로 cd ../../windows/10/enterprise
	

	mkdir(Make directory)
	- 디렉토리 생성
	mkdir [directory name] 
	mkdir [option] [directory name]
	
	-p 하위 디렉토리까지 한번에 생성
	-m 기본 권한을 주면서 디렉토리 생성 	
	-복수 지정 가능
	
	중괄호 확장
	ex) #mkdir -p /korea/seoul/dobong-gu
	ex) #mkdir -p /dong/sam/park/{dir1,dir2,dir3}	
	
	
	
	
	
	
	
	
rmdir (Remove Directory)

	rmdir [option] [directory]
	-p 지정한 하위 디렉토리까지 한번에 삭제

	
	! 디렉터리에 파일이 있는 경우 삭제되지 않는다. -빈디렉토리 삭제
	! 디렉터리내의 파일들을 보호하기 위한 최소한의 장치
	
	
	
	
	
	
----------------------------------------------------------------------
	실습1	

-----------------------------------------------------------------------	
추가 tip
day2~day7까지 디렉토리 삭제 시 조금 더 빠르고 으로 삭제 할 수 없을까?
day1~day7까지 디렉토리 생성 시 조금 더 빠르고 편리한 방법으로 만들 수 없을까?
만약 day001~ day100까지 총 100개의 디렉토리를 생성해야한다면?

1. 여러개의 argument
	
	#mkdir day1 day2 day3 day4 day5 day6 day7
	-- > #rmdir day2 day3 day4 day5 day6 day7 //가능하다

	#echo a{b,c,d,e}f //hint
	
2. #mkdir day{1,2,3,4,5,6,7}
   #rmdir day{2,3,4,5,6,7}			//가능!
   
만약 day001~ day100까지 총 100개의 디렉토리를 생성해야한다면?

	for i in {1..20..2}; do echo "for loop test $i"; done //hint
	
	#mkdir day{001..100}

3. 100개의 디렉토리를 전부 삭제 하려면?
	rmdir day{001..100}
	

	cp (Copy)
	-파일이나 디렉토리 복사
	cp [option] [sources] [target]
	
	-a 원본 파일의 속성, 링크 정보들을 그대로 유지하면서 복사한다.
	-i 만약 복사할 대상이 이미 있으면 사용자에게 물어본다. 
	-R 디렉터리를 복사할 경우 그 안에 포함된 모든 하위경로와 파일들을 모두 복사한다.
	-f 만약 복사할 대상이 이미 있으면 강제로 지우고 복사한다.
	-v 명령어 실행 과정을 보여준다.
	-r 디렉토리 복사
	
복사 시 두인자가 모두 파일인 경우
- #cp /bin/ls /practice/day3/ls_backup
- ls 파일을 ls_backup로 복사
- 원본 파일이 존재하면 원본 파일의 내용은 덮어쓴다.
- 원본 파일이 존재하지 않을 경우 새로 생성이 된다.

복사 시 두 번째 인자가 디렉토리인 경우
- #cp /bin/ls /prarctice/day3
- /practice/day3 디렉토리에 ls 파일 복사

복사 시 인자를 여러개 지정할 경우	
- #cp /bin/ls /bin/cp /practice/day3
- 두번째 인자는 디렉토리여야 한다. 	

디렉토리 복사하기
#cp /bin /practice/day3/bin_backup
#cp -r /bin /practice/day3/bin_backup
- 목적지 디렉토리가 없을 경우 생성 된다.
- 디렉토리 내부에 파일도 함께 복사 된다.

mv (Move)
	
	- 파일 및 디렉토리 이동
	
	mv [option] [sources] [target]
	
	-b 이동 경로에 같은 이름의 파일이나 디렉터리가 
	존재하면 중복될 경우 기존 파일을 백업한 뒤에 이동한다.
	-f 중복될 경우 덮어쓸 때 묻지 않고 바로 덮어쓴다.
	-i 중복될 경우 덮어쓸 때 물어본다.
	-v 명령어 실행 과정을 보여준다.

- 여러 파일을 디렉토리로 이동
mv [file1] [file2] [file ...] [directory]
	
------------------------------------------------------------------------------
	
rm (Remove)
	- 파일 삭제
	rm [option] [directory/file]
	
	-f 파일이나 디렉토리 삭제시 물어보지 않고 삭제
	-r 디렉토리 삭제시 하위 디렉토리 및 파일 포함하여 삭제
	-v 명령어 실행 과정을 보여준다.
	-i 삭제여부를 사용자에게 확인한다 (alias) // 잠시뒤에설명