파일링크

파일명 : 사용자가 파일에 접근할 때 사용하는 이름
inode : 파일에 대한 실질적인 정보를 가지고 있는 특별한 구조체로서 외부적으로는 번호로 표시가되고, 내부적으로는 파일의 타입, 크기, 소유자, 변경시간 등 데이터 블록의 주소를 저장.
#ls -i : inode 번호와 파일명이 출력된다.
--------------------------------------------------------------------------------------
링크 : 파일 시스템상에 존재하는 파일/디렉토리에 대한 바로가기(shortcut)을 만들 때 사용되는 파일,

@심볼릭 링크(symbolic link) 
:파일을 가르키는 포인터가 있느 작은 파일을 생성. 
inode 번호가 다르다

#ln -s [대상파일명] [링크파일명] : 
ex) # ln -s /etc/sysconfig/network-scripts/ /network
결과-> (#ls -l을 할 경우) network -> /etc/sysconfig/network-scripts/


@하드링크(hard link)
: 기존 파일에 새로운 파일명을 추가로 생성
디렉토리는 링킹할 수 없으며, 같은 파일 시스템에 존재해야한다.
inode 번호가 같다

#ln [대상파일명] [링크파일명]


?원본이 지워졌을 때 심볼릭은 없어지고 하드는 남아있나?

-------------------------------------------------------------------------------------
#yum -y install lrzsz  : 파일 복사가능

-grep 정규표현식, 메타문자

#grep '[메타문자][찾을문자열]' [파일명]
#grep -i  : 대소문자 구별없이 검색

메타문자	의미
^문자	행의 시작
문자$	행의 끝
문자.문자	하나의 문자와 대응
*	선행문자의 0개 혹은 임의 개수와 대응
[]	[]사이에 문자 하나와 대응
[^]	[]문자사이에 문자를 제외한 문자와 대응
\<단어	단어의 시작
단어\>	단어의 끝
A{N\}	문자 A를 N번 반복
A\{N,\}	문자 A가 적어도 N번 반복
A\{N,n\}	문자 A가 N번 이상 n번 이하 반복

# grep 'The' grep_test : 'The'가 포함된 행 출력
# grep '[tT]' grep_test : 't' 나 'T'가 포함된 행 출력
# grep '\<ing' grep_test : 'ing'으로 시작하는 단어
# grep 'ing\>' grep_test : 'ing'으로 끝나는 단어
# grep 'n$' /etc/passwd : 'n'으로 끝나는 행 출력



-egrep '패턴' 파일명 = grep -E 와 동일
ex) #egrep 'A|B' [파일명] : A또는 B가 포함된 행 출력



-fgrep 
: '패턴' 부분에 명시된 문자를 모두 "문자"로 취급, 정규식을 사용할 수 없음
ex) 
# grep '#[' grep_test  : 패턴이 없는 것이므로 결과 안나옴
# fgrep '#[' grep_test : #[ 이 들어가는 행 출력



-sort
: 파일 내의 내용을 알파벳 순서대로 정렬

#sort [옵션] [파일명]
옵션	의미
-n 	숫자기준으로 정렬
-r	역순으로 정렬
-u	중복행 제거 (#uniq 명령어와 동일)
-o	출력결과를 파일로 저장
-nr 	숫자를 기준으로 역순으로 정렬

#sort -n grep_test -o sort1 : 출력결과를 sort1라는 파일로 저장



-wc (word count)
:단어, 라인 문자 수 계산

# wc [옵션] [파일명]
옵션	의미
-l	라인 수 출력
-m	문자 수 출력
-w	단어 수 출력



-cut
:필드 잘라내기

# cut [옵션] [파일명]
옵션	의미
-c	잘라낼 글자 위치를 지정
-f	잘라낼 필드를 지정 ,-d 와 같이 씀
-d	필드와 구분하는 문자를 지정 (기본값 : tab)


# cut -c 1 cut_test : cut_test 파일에서 모든행의 1번째 위치 글자까지 보여줌
# cut -d ':' -f 1 cut_test : ':'기준으로 1번째 필드까지 보여달라


