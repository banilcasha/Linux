Xshell 메뉴 -> 도구 -> 옵션 -> 키보드와 마우스
마우스				가운데 단추 : 아무것도 하지 않습니다.			오른쪽 단추 : 클립보드의 내용을 붙여넣습니다.
선택 					[V] 선택한 텍스트를 자동으로 클립보드에 복사
alias grep='grep --color=auto'
프로세스 관리 실습 - Xshell Session을 추가하여 2개의 창에서 프로세스 확인하며 실습진행 
0. 양쪽 모두 root로 접속 후, 1번창에서 ps 명령어와 옵션을 이용하여 현재 로그인한
   Bash Shell 의 PID와 PPID 확인.
1. 1번 창에서 /bin/bash 입력하여 현재 로그인한 Bash Shell에서 Bash Shell 실행
   ps 명령어와 옵션을 이용하여 추가로 생성된 Bash Shell의 PID와 PPID확인.
2. 1번에서 추가로 생성한 Bash Shell의 부모 프로세스 확인, 부모-자식 프로세스 관계 확인 후
   exit 명령으로 추가로 실행한 Bash Shell Logout.
3. pgrep bash 명령어 입력 시 출력 결과를 보고 명령어의 용도 생각해보기.
4. sleep 99999 & 명령어 2번 입력 후 kill을 이용하여 해당 프로세스 강제 종료.
	(1) 첫번째 sleep 프로세스 숫자 시그널로 종료
	(2) 두번째 sleep 프로세스 문자 시그널로 종료
5. sleep 99999 & 명령어 5번 입력 후 pkill sleep 명령어 입력.  
   결과 확인 및 명령어의 용도 생각해보기.
6. 초기 Bash Shell 상태에서 아래 명령어 순서대로 실행
	(1)/bin/bash (2)/bin/bash (3)/bin/bash (4)sleep 99999 & (5)cat /etc/services | more
    5개의 명령어 입력 후 pstree 명령어 실행, 명령어의 용도 생각해보기.
7. 초기 Bash Shell 상태에서 아래 명령어 순서대로 실행
    (1)/bin/bash (2)vi /etc/services        다른세션 --> #kill -9 [(1)/bin/bash의 PID]
   ps 명령어 옵션으로 (2)vi /etc/services 프로세스의 PID와 PPID를 확인하고
   (2)vi /etc/services 프로세스의 상태 및 결과에 대해 생각해보기.
8. sleep 99999 & 명령어 실행 후 ps 명령어와 옵션으로 현재 상태(STAT)을 출력하여
   상태 값을 나태는 문자 확인 후, kill 명령어나 fg 명령으로 잠시 중지(STOP)시킨 후
   다시 ps 명령어로 현재 상태를 나타내는 문자 확인 -> 공유 폴더 사진 및 필드 값 참고